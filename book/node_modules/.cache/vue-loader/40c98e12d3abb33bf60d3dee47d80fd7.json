{"remainingRequest":"/Users/gaga/Desktop/vue/Books/book/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gaga/Desktop/vue/Books/book/src/views/Bookinfo.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/gaga/Desktop/vue/Books/book/src/views/Bookinfo.vue","mtime":1575964272043},{"path":"/Users/gaga/Desktop/vue/Books/book/node_modules/css-loader/dist/cjs.js","mtime":1573815120679},{"path":"/Users/gaga/Desktop/vue/Books/book/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1573815121359},{"path":"/Users/gaga/Desktop/vue/Books/book/node_modules/postcss-loader/src/index.js","mtime":1573815121151},{"path":"/Users/gaga/Desktop/vue/Books/book/node_modules/cache-loader/dist/cjs.js","mtime":1573815120526},{"path":"/Users/gaga/Desktop/vue/Books/book/node_modules/vue-loader/lib/index.js","mtime":1573815121359}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubWFpbiB7CiAgcGFkZGluZzogMTBweDsKfQoudG9wbGlzdCB7CiAgZGlzcGxheTogZmxleDsKfQoucGFnZSB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG1hcmdpbjogMTBweCAwOwp9Cg=="},{"version":3,"sources":["Bookinfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Bookinfo.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"main\">\n    <div class=\"toplist\">\n      <Dropdown style=\"margin: 0 10px 10px 0px\" @on-click=\"selectType\">\n        <Button type=\"primary\">\n          {{typeName ? typeName : \"选择类别\" }}\n          <Icon type=\"ios-arrow-down\"></Icon>\n        </Button>\n        <DropdownMenu slot=\"list\" v-for=\"item in typeList\">\n          <DropdownItem :name=\"item\">{{item}}</DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n      <Dropdown style=\"margin: 0 10px 10px 5px\" @on-click=\"selectLanguage\">\n        <Button type=\"primary\">\n          {{languageName ? languageName : \"选择语言\" }}\n          <Icon type=\"ios-arrow-down\"></Icon>\n        </Button>\n        <DropdownMenu slot=\"list\" v-for=\"item in languageList\">\n          <DropdownItem :name=\"item\">{{item}}</DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n      <Dropdown style=\"margin: 0 10px 10px 5px\" @on-click=\"selectStatus\">\n        <Button type=\"primary\">\n          {{statusName ? statusName : \"选择状态\" }}\n          <Icon type=\"ios-arrow-down\"></Icon>\n        </Button>\n        <DropdownMenu slot=\"list\" v-for=\"item in statusList\">\n          <DropdownItem :name=\"item\">{{item}}</DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n      <Button style=\"margin-left:5px\" type=\"primary\" @click=\"selectAll\">全部信息</Button>\n      <Input\n        v-model=\"bookname\"\n        style=\"width: auto;margin-left: 15px\"\n        search\n        enter-button\n        placeholder=\"搜索书名...\"\n        @on-search=\"searchName\"\n      />\n    </div>\n\n    <Table border :columns=\"columns\" :data=\"showdata\"></Table>\n    <Page\n      class=\"page\"\n      :total=\"total\"\n      show-total\n      :current.sync=\"currentPage\"\n      :page-size=\"pageSize\"\n      @on-change=\"changePage\"\n    />\n  </div>\n</template>\n\n<script>\nimport { data } from \"@/api/data.js\";\nimport { getDemo } from \"@/api/index.js\";\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      columns: [\n        {\n          title: \"ID\",\n          key: \"id\",\n          align: \"center\"\n        },\n        {\n          title: \"书名\",\n          key: \"name\",\n          align: \"center\"\n        },\n        {\n          title: \"类别\",\n          key: \"type\",\n          align: \"center\"\n        },\n        {\n          title: \"语言\",\n          key: \"language\",\n          align: \"center\"\n        },\n        {\n          title: \"价格(¥)\",\n          key: \"price\",\n          sortable: true,\n          align: \"center\"\n        },\n        {\n          title: \"数量\",\n          key: \"number\",\n          sortable: true,\n          align: \"center\"\n        },\n        {\n          title: \"状态\",\n          key: \"status\",\n          align: \"center\",\n          render: (h, params) => {\n            if (params.row.status == \"已上架\") {\n              return h(\"p\", { style: { color: \"green\" } }, params.row.status);\n            } else {\n              return h(\"p\", { style: { color: \"red\" } }, params.row.status);\n            }\n          }\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          width: 150,\n          align: \"center\",\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"primary\",\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      // this.show(params.index)\n                    }\n                  }\n                },\n                \"修改\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"error\",\n                    size: \"small\"\n                  },\n                  on: {\n                    click: () => {\n                      this.$Modal.confirm({\n                        title: \"提示\",\n                        content: \"<p>你确定要删除吗?</p>\",\n                        onOk: () => {},\n                        onCancel: () => {}\n                      });\n                    }\n                  }\n                },\n                \"删除\"\n              )\n            ]);\n          }\n        }\n      ],\n      bookdata: [], //当前全部数据\n      showdata: [], //当前页展示数据\n      showAlldata: [], //当前全部展示数据\n\n      //分页\n      currentPage: 1,\n      total: 0,\n      pageSize: 10,\n\n      //筛选\n      typeList: [], //类别列表\n      typeName: null, //类别显示\n      languageList: [], //语言列表\n      languageName: null, //语言显示\n      statusList: [], //状态列表\n      statusName: null, //状态显示\n      bookname: null //搜索书名\n    };\n  },\n  mounted() {\n\n     axios.get('data.json').then(res=>{\n        this.bookdata=res.data.msg;\n        this.Initial();\n      })\n\n                   window.onresize=()=>{\n      this.checkHeight();\n    }\n  },\n  methods: {\n    checkHeight(){\n     var H=document.body.clientHeight;\n      H < 700 ? this.pageSize=8 : this.pageSize=10;\n      this.changePage(1);\n    },\n    Initial() {\n      this.checkHeight();\n      this.getData(this.bookdata);\n      this.bookdata.map((item, index) => {\n        //类别列表\n        if (this.typeList.indexOf(item.type) == -1) {\n          this.typeList.push(item.type);\n        }\n        //语言列表\n        if (this.languageList.indexOf(item.language) == -1) {\n          this.languageList.push(item.language);\n        }\n        //状态列表\n        if (this.statusList.indexOf(item.status) == -1) {\n          this.statusList.push(item.status);\n        }\n      });\n    },\n    getData(data) {\n      this.showAlldata = data;\n      this.total = this.showAlldata.length;\n      this.currentPage = 1;\n      this.changePage(1);\n    },\n    changePage(index) {\n      var start = (index - 1) * this.pageSize;\n      var end = start + this.pageSize;\n      this.showdata = this.showAlldata.slice(start, end);\n    },\n    selectType(name) {\n      this.InitialList();\n      this.typeName = name;\n      this.getData(this.bookdata.filter(item => item.type == name));\n    },\n    selectLanguage(name) {\n      this.InitialList();\n      this.languageName = name;\n      this.getData(this.bookdata.filter(item => item.language == name));\n    },\n    selectStatus(name) {\n      this.InitialList();\n      this.statusName = name;\n      this.getData(this.bookdata.filter(item => item.status == name));\n    },\n    selectAll() {\n      this.InitialList();\n      this.getData(this.bookdata);\n    },\n    InitialList() {\n      //初始化选择列表项信息\n      this.typeName = null;\n      this.languageName = null;\n      this.statusName = null;\n      this.bookname = null;\n      this.currentPage = 1;\n    },\n    searchName() {\n      if (this.bookname) {\n        let arr = this.bookdata.filter(\n          item => item.name.indexOf(this.bookname) > -1\n        );\n        if (arr.length <= 0) {\n          this.$Message.error(\"没有找到相关书籍!\");\n        } else {\n          this.typeName = null;\n          this.languageName = null;\n          this.statusName = null;\n          this.getData(arr);\n        }\n      } else {\n        this.$Message.error(\"内容为空!\");\n      }\n    }\n  }\n};\n</script>\n\n<style>\n.main {\n  padding: 10px;\n}\n.toplist {\n  display: flex;\n}\n.page {\n  text-align: center;\n  margin: 10px 0;\n}\n</style>"]}]}